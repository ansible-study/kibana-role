---
# tasks file for kibana-role
# - name: Garhering info
#   action: setup
#   register: ip_v4

#- name: Garhering info2
# action: "setup filter=ansible_default_ipv4"
#  with_items: groups.

# - name: zero
#   debug: 
#     var: ipv4


# - name: one
#   debug: 
#     var: hostvars[inventory_hostname]['ansible_default_ipv4']['address']

# - name: two
#   debug: 
#     var: ansible_all_ipv4_addresses

# - name: three
#   debug: 
#     var: hostvars[inventory_hostname]['ansible_all_ipv4_addresses'] 


- name: Create group for Kibana
  group:
    name: kibana
    state: present
  tags: kibana

- name: Add user for Kibana
  user:
    name: kibana
    groups: kibana
    shell: /bin/bash
  tags: kibana

- name: Upload tar.gz Kibana from remote URL
  get_url:
    url: "https://artifacts.elastic.co/downloads/kibana/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
    dest: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"  #если указать просто директорию без имени файла, то имя файла будет взято из source
    mode: 0755
    timeout: 60  #увеличиваем, так как 10 сек (по умолчанию) не хватает для скачки и будет ошибка
    force: true
  register: get_kibana
  until: get_kibana is succeeded # пробуем, пока не скачается успешно (по умолчанию 3 раза)
  tags: kibana

- name: Create directrory for Kibana
  file:
    state: directory
    path: "{{ kibana_home }}"
    owner: kibana
    group: kibana
    mode: 0755
  tags: kibana

- name: Kibana Elasticsearch in the installation directory
  become: true
  unarchive:
    copy: false
    src: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
    dest: "{{ kibana_home }}"
    extra_opts: [--strip-components=1]  #удаляем 1 род. директорию при извлечении
    owner: kibana
    group: kibana
    mode: 0755
    creates: "{{ kibana_home }}/bin/kibana"  #если этот файл существует, то мы этот Task пропускаем
  tags:
    - skip_ansible_lint
    - kibana

- name: Set environment Kibana
  become: yes
  template:
    src: templates/kibana.sh.j2
    dest: /etc/profile.d/kibana.sh
    owner: root
    group: root
    mode: 0644
  tags: kibana

- name: Create Kibana config
  become: yes
  template:
    src: templates/kibana.yml.j2
    dest: "{{ kibana_home }}/config/kibana.yml"
    backup: true #каждый раз, когда конфиг будет меняться, он будет делать бэкап предыдущей версии в тойже директории.
    owner: kibana #who owner of files
    group: kibana
    mode: 0755
